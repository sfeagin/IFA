-- Ensure schema exists
IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'forcam')
BEGIN
    EXEC('CREATE SCHEMA forcam');
END
GO

-- Drop and recreate cycle_time table
IF OBJECT_ID('staging.forcam.cycle_time', 'U') IS NOT NULL
    DROP TABLE staging.forcam.cycle_time;
GO

CREATE TABLE staging.forcam.cycle_time (
    id INT IDENTITY(1,1) PRIMARY KEY,
    machine_name NVARCHAR(100) NOT NULL,
    [date] DATE NOT NULL,
    [time] TIME(0) NOT NULL,
    workplace NVARCHAR(50),
    order_number NVARCHAR(50),
    operation_number NVARCHAR(50),
    material_number NVARCHAR(50),
    te_sap DECIMAL(10,4) CHECK (te_sap >= 0),
    yield DECIMAL(10,4) CHECK (yield >= 0),
    scrap DECIMAL(10,4) CHECK (scrap >= 0),
    rework DECIMAL(10,4) CHECK (rework >= 0),
    undefined_stoppage DECIMAL(10,4) CHECK (undefined_stoppage >= 0),
    refilling_operational_materials DECIMAL(10,4) CHECK (refilling_operational_materials >= 0),
    machine_waiting_on_material DECIMAL(10,4) CHECK (machine_waiting_on_material >= 0),
    shift_changeover DECIMAL(10,4) CHECK (shift_changeover >= 0),
    preparation_time DECIMAL(10,4) CHECK (preparation_time >= 0),
    machine_cycle_time DECIMAL(10,4) CHECK (machine_cycle_time >= 0),
    button_to_button_time DECIMAL(10,4) CHECK (button_to_button_time >= 0),
    stroke_factor DECIMAL(10,4) CHECK (stroke_factor >= 0),
    cure_period DECIMAL(10,4) CHECK (cure_period >= 0),
    cure_period_factor DECIMAL(10,4) CHECK (cure_period_factor >= 0),
    dst_calc DECIMAL(10,4) CHECK (dst_calc >= 0),
    state NVARCHAR(50) NOT NULL CONSTRAINT DF_cycle_time_state DEFAULT 'UNKNOWN',
    status_reason NVARCHAR(50) NOT NULL CONSTRAINT DF_cycle_time_status_reason DEFAULT 'NONE',
    plan_group NVARCHAR(50),
    plan_group_counter NVARCHAR(50),
    script_version NVARCHAR(50),
    counter_total NVARCHAR(50),
    uuid AS CONCAT(workplace, '-', REPLACE(material_number, '-', ''), '-', operation_number, '-', plan_group, '-', plan_group_counter) PERSISTED,
    CONSTRAINT UQ_cycle_time_uuid UNIQUE (uuid)
);
GO

-- Drop and recreate thresholds table with composite PK
IF OBJECT_ID('staging.forcam.thresholds', 'U') IS NOT NULL
    DROP TABLE staging.forcam.thresholds;
GO

CREATE TABLE staging.forcam.thresholds (
    machine_name NVARCHAR(100) NOT NULL,
    material_number NVARCHAR(50) NOT NULL,
    min_cycle_time DECIMAL(10,4) CHECK (min_cycle_time >= 0),
    max_cycle_time DECIMAL(10,4) CHECK (max_cycle_time >= 0),
    CONSTRAINT PK_thresholds PRIMARY KEY (machine_name, material_number),
    CONSTRAINT CK_thresholds_min_less_max CHECK (min_cycle_time < max_cycle_time)
);
GO

-- **NEW** Drop and recreate api_cycle_data table
IF OBJECT_ID('staging.forcam.api_cycle_data', 'U') IS NOT NULL
    DROP TABLE staging.forcam.api_cycle_data;
GO

CREATE TABLE staging.forcam.api_cycle_data (
    id INT IDENTITY(1,1) PRIMARY KEY,
    machine_name NVARCHAR(100) NOT NULL,
    material_number NVARCHAR(50) NOT NULL,
    cycle_time DECIMAL(10,4) NOT NULL,
    operation_number NVARCHAR(50),
    timestamp DATETIME NOT NULL,
    json_blob NVARCHAR(MAX) -- store full JSON for audit/troubleshooting
);
GO

-- Drop and recreate error_log table for error tracking
IF OBJECT_ID('staging.forcam.error_log', 'U') IS NOT NULL
    DROP TABLE staging.forcam.error_log;
GO

CREATE TABLE staging.forcam.error_log (
    error_id INT IDENTITY(1,1) PRIMARY KEY,
    error_message NVARCHAR(MAX),
    error_date DATETIME DEFAULT GETDATE(),
    error_severity NVARCHAR(50),
    error_line INT
);
GO

-- Create or alter view for cycle_time with dynamic thresholds status
CREATE OR ALTER VIEW staging.forcam.cycle_time_with_status AS
SELECT
    ct.*,
    t.min_cycle_time,
    t.max_cycle_time,
    CASE
        WHEN t.min_cycle_time IS NULL OR t.max_cycle_time IS NULL THEN 'NO_THRESHOLD'
        WHEN ct.machine_cycle_time < t.min_cycle_time THEN 'TOO_SHORT'
        WHEN ct.machine_cycle_time > t.max_cycle_time THEN 'TOO_LONG'
        ELSE 'OK'
    END AS cycle_time_status
FROM staging.forcam.cycle_time ct
LEFT JOIN staging.forcam.thresholds t
    ON ct.machine_name = t.machine_name
   AND ct.material_number = t.material_number;
GO
