-- ===============================
-- Create Required Schemas
-- ===============================
IF NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'forcam')
    EXEC('CREATE SCHEMA forcam');
GO

-- ===============================
-- Drop and Recreate cycle_time Table
-- Stores raw cycle time and machine data from FORCAM
-- ===============================
IF OBJECT_ID('staging.forcam.cycle_time') IS NOT NULL
    DROP TABLE staging.forcam.cycle_time;
GO

CREATE TABLE staging.forcam.cycle_time (
    id INT IDENTITY(1,1) PRIMARY KEY,
    machine_name NVARCHAR(100),
    [date] DATE,
    [time] TIME(0),
    workplace NVARCHAR(50),
    ordernumber NVARCHAR(50),
    operationnumber NVARCHAR(50),
    materialnumber NVARCHAR(50),
    te_sap FLOAT,
    yield FLOAT,
    Scrap FLOAT,
    Rework FLOAT,
    undefinedstoppage FLOAT,
    refillingoperationalmaterials FLOAT,
    machinewaitingonmaterial FLOAT,
    shiftchangeover FLOAT,
    preparation_time FLOAT,
    machine_cycle_time FLOAT,
    button_to_button_time FLOAT,
    stroke_factor FLOAT,
    cure_period FLOAT,
    cure_period_factor FLOAT,
    dstcalc FLOAT,
    state NVARCHAR(50),
    status_reason NVARCHAR(50),
    plangroup NVARCHAR(50),
    plangroup_counter NVARCHAR(50),
    script_version NVARCHAR(50),

    -- Auto-generated UUID for tracking
    uuid AS CONCAT(workplace, '-', REPLACE(materialnumber, '-', ''), '-', operationnumber, '-', plangroup, '-', plangroup_counter) PERSISTED,

    -- Static cycle time quality indicator
    cycle_time_status AS (
        CASE 
            WHEN machine_cycle_time < 5 THEN 'TOO_SHORT'
            WHEN machine_cycle_time > 600 THEN 'TOO_LONG'
            ELSE 'Good'
        END
    ) PERSISTED
);
GO

-- ===============================
-- Drop and Recreate thresholds Table
-- Stores per-machine and material threshold limits for cycle time validation
-- ===============================
IF OBJECT_ID('staging.forcam.thresholds') IS NOT NULL
    DROP TABLE staging.forcam.thresholds;
GO

CREATE TABLE staging.forcam.thresholds (
    machine_name NVARCHAR(100),
    materialnumber NVARCHAR(50),
    min_cycle_time FLOAT,
    max_cycle_time FLOAT,
    PRIMARY KEY (machine_name, materialnumber)
);
GO

-- ===============================
-- Create or Replace View: cycle_time_with_status
-- Adds dynamic threshold-based status to each cycle
-- ===============================
CREATE OR ALTER VIEW staging.forcam.cycle_time_with_status AS
SELECT 
    f.*, 
    t.min_cycle_time,
    t.max_cycle_time,
    CASE 
        WHEN t.min_cycle_time IS NULL OR t.max_cycle_time IS NULL THEN 'NO_THRESHOLD'
        WHEN f.machine_cycle_time < t.min_cycle_time THEN 'TOO_SHORT'
        WHEN f.machine_cycle_time > t.max_cycle_time THEN 'TOO_LONG'
        ELSE 'OK'
    END AS cycle_time_status
FROM 
    staging.forcam.cycle_time f
LEFT JOIN 
    staging.forcam.thresholds t
    ON f.machine_name = t.machine_name
    AND f.materialnumber = t.materialnumber;
GO

-- ===============================
-- Mode Calculation: Machine Cycle Time
-- Gets the most frequent machine_cycle_time value for given UUID and order
-- ===============================
SELECT TOP 1 WITH TIES machine_cycle_time AS mode_machine_cycle_time
FROM staging.forcam.cycle_time
WHERE uuid = 'SOME_UUID' AND ordernumber = 'SOME_ORDERNUMBER'
GROUP BY machine_cycle_time
ORDER BY COUNT(*) DESC;
GO

-- ===============================
-- Mode Calculation: Preparation Time
-- Gets the most frequent preparation_time value for given UUID and order
-- ===============================
SELECT TOP 1 WITH TIES preparation_time AS mode_preparation_time
FROM staging.forcam.cycle_time
WHERE uuid = 'SOME_UUID' AND ordernumber = 'SOME_ORDERNUMBER'
GROUP BY preparation_time
ORDER BY COUNT(*) DESC;
GO

-- ===============================
-- IQR Calculation: Machine Cycle Time
-- Calculates Interquartile Range to detect outliers
-- Requires SQL Server 2022+ for PERCENTILE_CONT
-- ===============================
SELECT
    PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY machine_cycle_time) -
    PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY machine_cycle_time) AS machine_cycle_time_iqr
FROM staging.forcam.cycle_time
WHERE uuid = 'SOME_UUID' AND ordernumber = 'SOME_ORDERNUMBER';
GO

-- ===============================
-- IQR Calculation: Preparation Time
-- ===============================
SELECT
    PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY preparation_time) -
    PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY preparation_time) AS preparation_time_iqr
FROM staging.forcam.cycle_time
WHERE uuid = 'SOME_UUID' AND ordernumber = 'SOME_ORDERNUMBER';
GO
